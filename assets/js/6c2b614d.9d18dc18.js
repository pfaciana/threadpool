"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3813],{131:(e,n,r)=>{r.d(n,{A:()=>o});r(8101);var t=r(3526);const a={tabItem:"tabItem_w3dh"};var i=r(5105);function o(e){let{children:n,hidden:r,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,o),hidden:r,children:n})}},3331:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(8101);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},6846:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>l,default:()=>p,frontMatter:()=>u,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"examples/math-module","title":"Base Module","description":"Throughout the examples in this documentation, we will be using this math module to demonstrate various concepts.","source":"@site/docs/examples/math-module.md","sourceDirName":"examples","slug":"/examples/math-module","permalink":"/threadpool/docs/examples/math-module","draft":false,"unlisted":false,"editUrl":"https://github.com/pfaciana/threadpool/tree/master/docs/docs/examples/math-module.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Base Module"},"sidebar":"tutorialSidebar","previous":{"title":"Examples","permalink":"/threadpool/docs/category/examples"},"next":{"title":"Node Worker","permalink":"/threadpool/docs/category/node-worker"}}');var a=r(5105),i=r(3331),o=r(7647),s=r(131);const u={sidebar_position:1,title:"Base Module"},l="Base Module",m={},c=[];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"base-module",children:"Base Module"})}),"\n",(0,a.jsxs)(n.p,{children:["Throughout the examples in this documentation, we will be using this math module to demonstrate various concepts.\nIt will be referred to as ",(0,a.jsx)(n.code,{children:"./math.ts"})," and ",(0,a.jsx)(n.code,{children:"./math.js"})," for TypeScript and JavaScript, respectively."]}),"\n",(0,a.jsx)(n.p,{children:"This module includes a few concepts to understand."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"CPU-Intensive Code"}),": A collection of resource-intensive functions to demonstrate long-running tasks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"State"}),": State is tracked locally and can be read globally","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"state"})," is mutated when calling the ",(0,a.jsx)(n.code,{children:"add"})," function, in this example"]}),"\n",(0,a.jsxs)(n.li,{children:["This is important to understand when working with ",(0,a.jsx)(n.code,{children:"Persistent"})," workers"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Types"}),": The functions are well documented with JSDoc and TypeScript types","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:'Since we are technically running a worker on a separate thread, "normally" IDEs will lack context of the types'}),"\n",(0,a.jsx)(n.li,{children:'This demonstrates that, with this package, IDEs will still be able to do type checking and provide IntelliSense in the "main" thread'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"For this library, the contents of the module being imported is arbitrary. You can import any JavaScript or TypeScript module you'd like!\nNo special modifications are needed, any old module will do!"})}),"\n","\n",(0,a.jsxs)(o.A,{groupId:"programming-language",children:[(0,a.jsx)(s.A,{value:"typescript",label:"TypeScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"/** State counter used by some functions */\nexport let state = 0\n\n/**\n * Returns the current state counter value\n * @returns {number} The current state value\n */\nexport function getState(): number {\n  return state\n}\n\n/**\n * Adds two numbers and increments the state\n * @param {number} a First number to add\n * @param {number} b Second number to add\n * @returns {number} Sum of the numbers\n * @example add(2, 3) // returns 5\n */\nexport function add(a: number, b: number): number {\n  state++\n  return a + b\n}\n\n/**\n * Calculates the nth Fibonacci number using recursion\n * @param {number} n Position in Fibonacci sequence\n * @returns {number} The nth Fibonacci number\n * @example fib(6) // returns 8\n * @warning Not recommended for large values of n due to recursive implementation\n */\nexport function fib(n: number): number {\n  return n <= 2 ? 1 : fib(n - 1) + fib(n - 2)\n}\n\n/**\n * Calculates the nth Tribonacci number using recursion\n * @param {number} n Input number\n * @returns {number} Sum of three previous recursions\n * @warning Extremely inefficient for n > 20\n * @note Intentionally complex for testing purposes\n * @example tribonacci(30) // returns 280571172992510140\n */\nexport function tribonacci(n: number): number {\n  return n <= 1 ? n : tribonacci(n - 1) + tribonacci(n - 2) + tribonacci(n - 3)\n}\n\n/**\n * Calculates the factorial of a non-negative integer\n * @param {number} n Non-negative integer\n * @returns {number} Factorial of n\n * @example factorial(155) // returns 4.789142901463391e+273\n * @warning Not recommended for large values due to potential overflow\n */\nexport function factorial(n: number): number {\n  return n <= 1 ? 1 : n * factorial(n - 1)\n}\n\n/**\n * Determines if a number is prime\n * @param {number} n Number to check\n * @returns {boolean} true if the number is prime, false otherwise\n * @example isPrime(17) // returns true\n */\nexport function isPrime(n: number): boolean {\n  for (let i = 2; i <= Math.sqrt(n); i++) if (n % i === 0) return false\n  return n > 1\n}\n\n/**\n * Generates an array of random prime numbers\n * @param {number} quota Number of prime numbers to generate\n * @param {number} [maximum=1000000] Upper limit for generated numbers\n * @returns {number[]} Array of random prime numbers\n * @example generatePrimes(5, 100) // returns array of 5 random prime numbers <= 100\n */\nexport function generatePrimes(quota: number, maximum: number = 1000000): number[] {\n  const primes: number[] = []\n  while (primes.length < quota) {\n    const n = Math.floor(Math.random() * maximum)\n    if (isPrime(n)) primes.push(n)\n  }\n  return primes\n}\n\n/**\n * Selects a random element from an array\n * @param {Array} arr Input array of any type\n * @returns {*} Random element from the array\n * @example getRandomFromArray([1,2,3,4,5]) // returns random number from array\n */\nexport function getRandomFromArray<T>(arr: T[]): T {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\n/**\n * Finds all prime numbers up to a given number using Sieve of Eratosthenes algorithm\n * @param {number} n Upper limit to find primes up to\n * @returns {number[]} Array of all prime numbers up to n\n * @example findPrimesUpTo(10) // returns [2,3,5,7]\n */\nexport function findPrimesUpTo(n: number): number[] {\n  const sieve = Array(n + 1).fill(true)\n  for (let i = 2; i * i <= n; i++)\n    if (sieve[i]) for (let j = i * i; j <= n; j += i) sieve[j] = false\n  return Array.from({ length: n - 1 }, (_, i) => i + 2).filter(i => sieve[i])\n}\n\n/**\n * Estimates the value of \u03c0 using the Leibniz formula\n * @param {number} decimals Number of iterations to use in calculation (higher means more accurate)\n * @returns {number} Estimated value of \u03c0\n * @example estimatePi(25) // returns 3.1415926535897\n */\nexport function estimatePi(decimals: number): number {\n  const tolerance = Math.pow(10, -(decimals + 1))\n  let pi = 3, sign = 1, n = 2, term = 4 / (n * (n + 1) * (n + 2))\n\n  while (Math.abs(term) > tolerance) {\n    pi += sign * term\n    sign *= -1\n    n += 2\n    term = 4 / (n * (n + 1) * (n + 2))\n  }\n\n  return Number(pi.toFixed(decimals))\n}\n"})})}),(0,a.jsx)(s.A,{value:"javascript",label:"JavaScript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"/** State counter used by some functions */\nexport let state = 0\n\n/**\n * Returns the current state counter value\n * @returns {number} The current state value\n */\nexport function getState() {\n  return state\n}\n\n/**\n * Adds two numbers and increments the state\n * @param {number} a First number to add\n * @param {number} b Second number to add\n * @returns {number} Sum of the numbers\n * @example add(2, 3) // returns 5\n */\nexport function add(a, b) {\n  state++\n  return a + b\n}\n\n/**\n * Calculates the nth Fibonacci number using recursion\n * @param {number} n Position in Fibonacci sequence\n * @returns {number} The nth Fibonacci number\n * @example fib(6) // returns 8\n * @warning Not recommended for large values of n due to recursive implementation\n */\nexport function fib(n) {\n  return n <= 2 ? 1 : fib(n - 1) + fib(n - 2)\n}\n\n/**\n * Calculates the nth Tribonacci number using recursion\n * @param {number} n Input number\n * @returns {number} Sum of three previous recursions\n * @warning Extremely inefficient for n > 20\n * @note Intentionally complex for testing purposes\n * @example tribonacci(30) // returns 280571172992510140\n */\nexport function tribonacci(n) {\n  return n <= 1 ? n : tribonacci(n - 1) + tribonacci(n - 2) + tribonacci(n - 3)\n}\n\n/**\n * Calculates the factorial of a non-negative integer\n * @param {number} n Non-negative integer\n * @returns {number} Factorial of n\n * @example factorial(5) // returns 120\n * @warning Not recommended for large values due to potential overflow\n */\nexport function factorial(n) {\n  return n <= 1 ? 1 : n * factorial(n - 1)\n}\n\n/**\n * Determines if a number is prime\n * @param {number} n Number to check\n * @returns {boolean} true if the number is prime, false otherwise\n * @example isPrime(17) // returns true\n */\nexport function isPrime(n) {\n  for (let i = 2; i <= Math.sqrt(n); i++) if (n % i === 0) return false\n  return n > 1\n}\n\n/**\n * Generates an array of random prime numbers\n * @param {number} quota Number of prime numbers to generate\n * @param {number} [maximum=1000000] Upper limit for generated numbers\n * @returns {number[]} Array of random prime numbers\n * @example generatePrimes(5, 100) // returns array of 5 random prime numbers <= 100\n */\nexport function generatePrimes(quota, maximum = 1000000) {\n  const primes = []\n  while (primes.length < quota) {\n    const n = Math.floor(Math.random() * maximum)\n    if (isPrime(n)) primes.push(n)\n  }\n  return primes\n}\n\n/**\n * Selects a random element from an array\n * @param {Array} arr Input array of any type\n * @returns {*} Random element from the array\n * @example getRandomFromArray([1,2,3,4,5]) // returns random number from array\n */\nexport function getRandomFromArray(arr) {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\n/**\n * Finds all prime numbers up to a given number using Sieve of Eratosthenes algorithm\n * @param {number} n Upper limit to find primes up to\n * @returns {number[]} Array of all prime numbers up to n\n * @example findPrimesUpTo(10) // returns [2,3,5,7]\n */\nexport function findPrimesUpTo(n) {\n  const sieve = Array(n + 1).fill(true)\n  for (let i = 2; i * i <= n; i++)\n    if (sieve[i]) for (let j = i * i; j <= n; j += i) sieve[j] = false\n  return Array.from({ length: n - 1 }, (_, i) => i + 2).filter(i => sieve[i])\n}\n\n/**\n * Estimates the value of \u03c0\n * @param {number} decimals Number of iterations to use in calculation (higher means more accurate)\n * @returns {number} Estimated value of \u03c0\n * @example estimatePi(25) // returns 3.1415926535897\n */\nexport function estimatePi(decimals) {\n  const tolerance = Math.pow(10, -(decimals + 1))\n  let pi = 3, sign = 1, n = 2, term = 4 / (n * (n + 1) * (n + 2))\n\n  while (Math.abs(term) > tolerance) {\n    pi += sign * term\n    sign *= -1\n    n += 2\n    term = 4 / (n * (n + 1) * (n + 2))\n  }\n\n  return Number(pi.toFixed(decimals))\n}\n"})})})]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7647:(e,n,r)=>{r.d(n,{A:()=>j});var t=r(8101),a=r(3526),i=r(5093),o=r(5234),s=r(2569),u=r(1390),l=r(7775),m=r(7623);function c(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:r}=e;const a=(0,o.W6)(),i=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,u.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function f(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,i=d(e),[o,u]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[l,c]=b({queryString:r,groupId:a}),[f,h]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,m.Dv)(r);return[a,(0,t.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:a}),g=(()=>{const e=l??f;return p({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{g&&u(g)}),[g]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);u(e),c(e),h(e)}),[c,h,i]),tabValues:i}}var h=r(3547);const g={tabList:"tabList_NQRc",tabItem:"tabItem_cMRk"};var x=r(5105);function v(e){let{className:n,block:r,selectedValue:t,selectValue:o,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),m=e=>{const n=e.currentTarget,r=u.indexOf(n),a=s[r].value;a!==t&&(l(n),o(a))},c=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const r=u.indexOf(e.currentTarget)+1;n=u[r]??u[0];break}case"ArrowLeft":{const r=u.indexOf(e.currentTarget)-1;n=u[r]??u[u.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},n),children:s.map((e=>{let{value:n,label:r,attributes:i}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{u.push(e)},onKeyDown:c,onClick:m,...i,className:(0,a.A)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function y(e){let{lazy:n,children:r,selectedValue:i}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function w(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...n,...e}),(0,x.jsx)(y,{...n,...e})]})}function j(e){const n=(0,h.A)();return(0,x.jsx)(w,{...e,children:c(e.children)},String(n))}}}]);