"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2505],{131:(e,n,r)=>{r.d(n,{A:()=>a});r(8101);var t=r(3526);const i={tabItem:"tabItem_w3dh"};var s=r(5105);function a(e){let{children:n,hidden:r,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,a),hidden:r,children:n})}},3331:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(8101);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},7647:(e,n,r)=>{r.d(n,{A:()=>k});var t=r(8101),i=r(3526),s=r(5093),a=r(5234),o=r(2569),l=r(1390),c=r(7775),d=r(7623);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:i}}=e;return{value:n,label:r,attributes:t,default:i}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function h(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:r}=e;const i=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,s=p(e),[a,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,u]=m({queryString:r,groupId:i}),[x,v]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,d.Dv)(r);return[i,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:i}),f=(()=>{const e=c??x;return h({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{f&&l(f)}),[f]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),v(e)}),[u,v,s]),tabValues:s}}var v=r(3547);const f={tabList:"tabList_NQRc",tabItem:"tabItem_cMRk"};var j=r(5105);function g(e){let{className:n,block:r,selectedValue:t,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),i=o[r].value;i!==t&&(c(n),a(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},n),children:o.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...s,className:(0,i.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function b(e){let{lazy:n,children:r,selectedValue:s}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,j.jsx)(g,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function k(e){const n=(0,v.A)();return(0,j.jsx)(y,{...e,children:u(e.children)},String(n))}},8204:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api/node/exit-event-support","title":"Exit Event Support","description":"The exit event support utilities provide tools for handling worker thread termination across different JavaScript runtimes (Node.js, Deno, and Bun). These utilities help ensure consistent worker cleanup behavior regardless of the runtime environment.","source":"@site/docs/api/node/exit-event-support.md","sourceDirName":"api/node","slug":"/api/node/exit-event-support","permalink":"/threadpool/docs/api/node/exit-event-support","draft":false,"unlisted":false,"editUrl":"https://github.com/pfaciana/threadpool/tree/master/docs/docs/api/node/exit-event-support.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Worker","permalink":"/threadpool/docs/api/node/worker"},"next":{"title":"Function API","permalink":"/threadpool/docs/category/function-api"}}');var i=r(5105),s=r(3331);r(7647),r(131);const a={sidebar_position:4},o="Exit Event Support",l={},c=[{value:"API Reference",id:"api-reference",level:2},{value:"exitEventSupported",id:"exiteventsupported",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"exitKey",id:"exitkey",level:3},{value:"close",id:"close",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Runtime Detection",id:"runtime-detection",level:3},{value:"Worker Script Cleanup",id:"worker-script-cleanup",level:3},{value:"Manual Exit Event Handling",id:"manual-exit-event-handling",level:3},{value:"Runtime Behavior",id:"runtime-behavior",level:2},{value:"Node.js",id:"nodejs",level:3},{value:"Deno",id:"deno",level:3},{value:"Bun",id:"bun",level:3},{value:"Customizing Detection",id:"customizing-detection",level:2},{value:"Internal Usage",id:"internal-usage",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"exit-event-support",children:"Exit Event Support"})}),"\n",(0,i.jsx)(n.p,{children:"The exit event support utilities provide tools for handling worker thread termination across different JavaScript runtimes (Node.js, Deno, and Bun). These utilities help ensure consistent worker cleanup behavior regardless of the runtime environment."}),"\n",(0,i.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,i.jsx)(n.h3,{id:"exiteventsupported",children:"exitEventSupported"}),"\n",(0,i.jsx)(n.p,{children:"Tests whether the current runtime properly supports worker 'exit' events."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"async function exitEventSupported(delay: number = 250): Promise<boolean>\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"delay"}),": (Optional) Maximum time in milliseconds to wait for the exit event. Defaults to 250ms."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Promise<boolean>"}),": Resolves to ",(0,i.jsx)(n.code,{children:"true"})," if exit events are properly supported, ",(0,i.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"exitkey",children:"exitKey"}),"\n",(0,i.jsx)(n.p,{children:"A special message key used as a signal for thread termination in environments where worker 'exit' events aren't natively supported."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const exitKey: string = '@@TerminateThread'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"close",children:"close"}),"\n",(0,i.jsx)(n.p,{children:"Safely closes a worker thread's parent port connection."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function close(parentPort: any): void\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"parentPort"}),": The parentPort from worker_threads module"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,i.jsx)(n.h3,{id:"runtime-detection",children:"Runtime Detection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { exitEventSupported } from '@renderdev/threadpool'\n\nasync function setupWorker() {\n  const hasExitSupport = await exitEventSupported()\n\n  if (hasExitSupport) {\n    console.log('Using native exit events')\n  } else {\n    console.log('Using fallback message-based exit mechanism')\n    process.env.USE_EXIT_FALLBACK = '1'\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"worker-script-cleanup",children:"Worker Script Cleanup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { parentPort } from 'node:worker_threads'\nimport { close } from '@renderdev/threadpool'\n\n// Your worker code here...\n\n// When work is complete, safely close the worker\ntry {\n  // Clean up resources...\n  close(parentPort)\n} catch (error) {\n  console.error('Error during worker cleanup:', error)\n  process.exit(1)\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"manual-exit-event-handling",children:"Manual Exit Event Handling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { exitKey } from '@renderdev/threadpool'\nimport { Worker } from 'node:worker_threads'\n\nconst worker = new Worker('./worker.js')\n\n// Listen for both standard exit and fallback exit\nworker.on('exit', (code) => {\n  console.log(`Worker exited with code ${code}`)\n})\n\nworker.on('message', (message) => {\n  if (message === exitKey) {\n    console.log('Received exit signal from worker')\n    // Perform cleanup...\n  }\n})\n"})}),"\n",(0,i.jsx)(n.h2,{id:"runtime-behavior",children:"Runtime Behavior"}),"\n",(0,i.jsx)(n.h3,{id:"nodejs",children:"Node.js"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Native exit events are fully supported"}),"\n",(0,i.jsx)(n.li,{children:"Fallback mechanism is not needed"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"close()"})," simply calls ",(0,i.jsx)(n.code,{children:"parentPort.close()"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"deno",children:"Deno"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exit event support varies by version"}),"\n",(0,i.jsx)(n.li,{children:"Fallback mechanism used when needed"}),"\n",(0,i.jsx)(n.li,{children:"Both exit events and message-based exit may be active"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bun",children:"Bun"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exit event support may be incomplete"}),"\n",(0,i.jsx)(n.li,{children:"Fallback mechanism is recommended"}),"\n",(0,i.jsx)(n.li,{children:"Message-based exit ensures reliable cleanup"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"customizing-detection",children:"Customizing Detection"}),"\n",(0,i.jsx)(n.p,{children:"You can customize the detection timeout based on your environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Increase detection timeout for slower environments\nconst hasSupport = await exitEventSupported(1000) // 1 second timeout\n\n// Quick check for development\nconst hasSupport = await exitEventSupported(50) // 50ms timeout\n"})}),"\n",(0,i.jsx)(n.h2,{id:"internal-usage",children:"Internal Usage"}),"\n",(0,i.jsx)(n.p,{children:"These utilities are used internally by ThreadPool for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Runtime environment detection"}),"\n",(0,i.jsx)(n.li,{children:"Worker pool cleanup coordination"}),"\n",(0,i.jsx)(n.li,{children:"Cross-runtime compatibility"}),"\n",(0,i.jsx)(n.li,{children:"Graceful worker termination"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Always use close()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { close } from '@renderdev/threadpool'\n\n// Instead of parentPort.close()\nclose(parentPort)\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Check Support on Startup"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { exitEventSupported } from '@renderdev/threadpool'\n\nasync function initialize() {\n  const hasSupport = await exitEventSupported()\n  // Configure your application accordingly\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Handle Both Exit Types"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { exitKey } from '@renderdev/threadpool'\n\nworker.on('exit', handleExit)\nworker.on('message', (msg) => {\n  if (msg === exitKey) handleExit()\n})\n"})}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);