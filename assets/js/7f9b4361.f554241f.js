"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3437],{3127:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"examples/function/math","title":"Basic Worker","description":"This example demonstrates how to use the FunctionPool to execute CPU-intensive math operations concurrently, improving performance on multi-core systems.","source":"@site/docs/examples/function/math.md","sourceDirName":"examples/function","slug":"/examples/function/math","permalink":"/threadpool/docs/examples/function/math","draft":false,"unlisted":false,"editUrl":"https://github.com/pfaciana/threadpool/tree/master/docs/docs/examples/function/math.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Basic Worker"},"sidebar":"tutorialSidebar","previous":{"title":"Server Functions","permalink":"/threadpool/docs/category/server-functions"},"next":{"title":"Multiple Workers","permalink":"/threadpool/docs/examples/function/pool"}}');var i=n(5105),s=n(3331);const r={sidebar_position:1,title:"Basic Worker"},a="Basic Example",c={},d=[{value:"Code",id:"code",level:2},{value:"Output",id:"output",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"basic-example",children:"Basic Example"})}),"\n",(0,i.jsxs)(t.p,{children:["This example demonstrates how to use the ",(0,i.jsx)(t.code,{children:"FunctionPool"})," to execute CPU-intensive math operations concurrently, improving performance on multi-core systems."]}),"\n",(0,i.jsx)(t.h2,{id:"code",children:"Code"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"import { FunctionPool, importTaskWorker, StatusType } from '@renderdev/threadpool/function'\nimport type * as mathType from './math.ts'\n\nconst startTime = performance.now()\n\nconst pool = (new FunctionPool())\n  .race((data, thread) => {\n    console.log(`Finished First: ${thread.meta} = ${data}\\n`)\n  })\n  .then((data, thread) => {\n    console.log(thread.meta, Array.isArray(data) ? data.length : data)\n  })\n  .allSettled(() => {\n    console.log('\\nDONE!', pool.status('completed', StatusType.COUNT))\n    const endTime = performance.now()\n    const elapsedTime = endTime - startTime\n    console.log('\\n\\nScript runtime: ' + (Math.round(elapsedTime) / 1000) + ' sec')\n  })\n\nconst filename = new URL('./math.ts', import.meta.url)\nconst { fib, findPrimesUpTo, estimatePi, tribonacci } = await importTaskWorker<typeof mathType>(filename)\n\npool.addTask(fib(42), 'fib(42)')\npool.addTask(tribonacci(32), 'tribonacci(32)')\npool.addTask(findPrimesUpTo(17000000), 'findPrimesUpTo(17000000)')\npool.addTask(estimatePi(25), 'estimatePi(25)')\n"})}),"\n",(0,i.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Finished First: estimatePi(25) = 3.141592653589793\n\nfib(42) 267914296\ntribonacci(32) 45152016\nfindPrimesUpTo(17000000) 1091314\nestimatePi(25) 3.141592653589793\n\nDONE! 4\n\n\nScript runtime: 5.421 sec\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},3331:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(8101);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);